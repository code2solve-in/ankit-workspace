@startuml

title __WOLF_TASKS's Class Diagram__\n

  namespace wolf_tasks {
    class wolf_tasks.Notebook {
        - notebookName : String
        - taskLists : List<TaskList>
        + Notebook()
        + addTaskList()
        + editTaskList()
        + getNotebookName()
        + getTaskLists()
        + removeTaskList()
        + setNotebookName()
        + setTaskLists()
        - rearrangeTaskList()
    }
  }
  

  namespace wolf_tasks {
    class wolf_tasks.NotebookGUI {
        + NotebookGUI()
        + actionPerformed()
        {static} + main()
    }
  }
  

  namespace wolf_tasks {
    class wolf_tasks.NotebookManager {
        {static} - INSTANCE : NotebookManager
        + createNoteBook()
        + getActiveTaskList()
        + getCurrentTaskList()
        {static} + getInstance()
        + loadFromFile()
        + quit()
        + saveToFile()
        + setCurrentTaskList()
        + updateActiveTaskList()
        - NotebookManager()
    }
  }
  

  namespace wolf_tasks {
    class wolf_tasks.NotebookReader {
        + NotebookReader()
        {static} + readNotebookFromFile()
        {static} - processTask()
        {static} - processTaskList()
    }
  }
  

  namespace wolf_tasks {
    class wolf_tasks.NotebookWriter {
        + NotebookWriter()
        {static} + writeNotebookToFile()
    }
  }
  

  namespace wolf_tasks {
    class wolf_tasks.Task {
        - description : String
        - isActive : boolean
        - isCompleted : boolean
        - isRecurring : boolean
        - priorityNumber : int
        - taskName : String
        + Task()
        + getDescription()
        + getPriorityNumber()
        + getTaskName()
        + isActive()
        + isCompleted()
        + isRecurring()
        + setActive()
        + setCompleted()
        + setDescription()
        + setPriorityNumber()
        + setRecurring()
        + setTaskName()
        + toString()
    }
  }
  

  namespace wolf_tasks {
    class wolf_tasks.TaskList {
        - completedTasksCount : int
        - taskListName : String
        - tasks : List<Task>
        + TaskList()
        + addTask()
        + deleteTask()
        + editTask()
        + getCompletedTasksCount()
        + getCurrentTask()
        + getSortedTaskList()
        + getTaskListName()
        + getTasks()
        + markTaskAsComplete()
        + moveTaskDown()
        + moveTaskToBack()
        + moveTaskToFront()
        + moveTaskUp()
        + setCompletedTasksCount()
        + setCurrentTask()
        + setTaskListName()
        + setTasks()
        + toString()
    }
  }
  

  wolf_tasks.NotebookManager o-- wolf_tasks.TaskList : activeTaskList
  wolf_tasks.NotebookManager o-- wolf_tasks.TaskList : currentTaskList
  wolf_tasks.NotebookManager o-- wolf_tasks.Notebook : notebook
  wolf_tasks.TaskList o-- wolf_tasks.Task : currentTask


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
